{
    "Mappings" : {
        "RegionMap" : {
            "us-east-1" : { 
                "AMI" : "ami-0ff8a91507f77f867" 
            },
            "us-west-2" : {
                "AMI" : "ami-a0cfeed8"
            },
            "eu-west-1" : { 
                "AMI" : "ami-047bb4163c506cd98" 
            },
            "ap-northeast-1" : { 
                "AMI" : "ami-06cd52961ce9f0d85" 
            },
            "ap-southeast-1" : { 
                "AMI" : "ami-08569b978cc4dfa10" 
            }
        }
    },
    "Outputs": {
        "privateEc2Instance1": {
            "Value": {
                "Ref": "privateEc2Instance1"
            }
        },
        "privateInstanceSecurityGroup": {
            "Value": {
                "Ref": "privateInstanceSecurityGroup"
            }
        },
        "publicEc2Instance1": {
            "Value": {
                "Ref": "publicEc2Instance1"
            }
        },
        "publicInstanceSecurityGroup": {
            "Value": {
                "Ref": "publicInstanceSecurityGroup"
            }
        }
    },
    "Parameters": {
        "KeyPairName": {
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can only contain ASCII characters.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "InstanceType1": {
            "Description": "Instnace type",
            "Type": "String"
        }
    },
    "Resources" : {
        "privateEc2Instance1" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType" : {
                    "Ref": "InstanceType1"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
                        "#!/bin/bash -xe\n",
                        "sudo yum -y install java-1.8.0\n",
                        "sudo yum -y remove java-1.7.0-openjdk\n",
                        "sudo yum install -y tomcat7-webapps tomcat7-docs-webapp tomcat7-admin-webapps \n",
                        "sudo service tomcat7 start \n",
                        "DIR_TGT=/mnt/artefact/",
                        "\n",
                        "EFS_FILE_SYSTEM_IP=",
                        {
                            "Fn::GetAtt" : [ "MountTarget1", "IpAddress" ]
                        },
                        "\n",
                        "mkdir -p $DIR_TGT\n",
                        "sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${EFS_FILE_SYSTEM_IP}:/ /mnt/artefact/"
                    ]]}},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateInstance1"
                    }
                 ],
                "NetworkInterfaces": [ {
                      "AssociatePublicIpAddress": "false",
                      "DeviceIndex": "0",
                      "GroupSet": [{ "Ref" : "privateInstanceSecurityGroup" }],
                      "SubnetId": {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-privateSubnet1"}}
                      }
                    ]
            }
        },
        "privateInstanceSecurityGroup" : {
           "Type" : "AWS::EC2::SecurityGroup",
           "Properties" : {
              "GroupDescription" : "security group for private instance",
              "VpcId" : {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-vpcId"}},
              "SecurityGroupIngress" : [{
                 "IpProtocol" : "-1",
                 "CidrIp" : {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-publicSubCidr"}}
              }],
              "SecurityGroupEgress" : [{
                 "IpProtocol" : "-1",
                 "CidrIp" : "0.0.0.0/0"
                    }]
                }
        },
        "publicEc2Instance1" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType" : {
                    "Ref": "InstanceType1"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
                        "#!/bin/bash -xe\n",
                        "sudo yum -y update \n",
                        "sudo yum -y install java-1.8.0\n",
                        "sudo yum -y remove java-1.7.0-openjdk\n",
                        "sudo wget -O /etc/yum.repos.d/jenkins.repo  https://pkg.jenkins.io/redhat-stable/jenkins.repo\n",
                        "sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key\n",
                        "sudo yum upgrade -y \n",
                        "sudo yum install jenkins -y\n",
                        "sudo service jenkins start\n",
                        "sudo chkconfig --add jenkins\n",
                        "sudo yum-config-manager --enable epel \n",
                        "sudo yum repolist \n",
                        "sudo yum -y install ansible \n",
                        "sudo yum install git -y \n",
                        "DIR_TGT=/mnt/artefact/",
                        "\n",
                        "EFS_FILE_SYSTEM_IP=",
                        {
                            "Fn::GetAtt" : [ "MountTarget1", "IpAddress" ]
                        },
                        "\n",
                        "mkdir -p $DIR_TGT\n",
                        "sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${EFS_FILE_SYSTEM_IP}:/ /mnt/artefact/ \n",
                        "pwd \n",
                        "wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz\" -P /home/ec2-user/ \n",
                        "sudo tar -xzvf /home/ec2-user/jdk-8u131-linux-x64.tar.gz -C /home/ec2-user/ \n",
                        "sudo mv /home/ec2-user/jdk1.8.0_131 /usr/lib/jvm/ \n",
                        "sudo echo '#!/bin/bash' > custom.sh \n",
                        "sudo echo 'export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_131' >> custom.sh \n",
                        "sudo mv custom.sh /etc/profile.d/ \n",
                    ]]}},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicInstance1"
                    }
                 ],
                "NetworkInterfaces": [ {
                      "AssociatePublicIpAddress": "true",
                      "DeviceIndex": "0",
                      "GroupSet": [{ "Ref" : "publicInstanceSecurityGroup" }],
                      "SubnetId": {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-publicSubnet1"}}
                      }
                    ]
            }
        },
        "publicInstanceSecurityGroup" : {
           "Type" : "AWS::EC2::SecurityGroup",
           "Properties" : {
              "GroupDescription" : "security group for public instance",
              "VpcId" : {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-vpcId"}},
              "SecurityGroupIngress" : [{
                 "IpProtocol" : "tcp",
                 "FromPort" : 22,
                 "ToPort" : 22,
                 "CidrIp" : {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-publicSubCidr"}}
              }],
              "SecurityGroupEgress" : [{
                 "IpProtocol" : "-1",
                 "CidrIp" : "0.0.0.0/0"
              }]
           }
        },
        "MountTargetSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "VpcId": {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-vpcId"}},
            "GroupDescription" : "security group for efs mount",
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": "2049",
                "ToPort": "2049",
                "CidrIp": {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-privateSubCidr"}}
              },
              {
                "IpProtocol": "tcp",
                "FromPort": "2049",
                "ToPort": "2049",
                "CidrIp": {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-publicSubCidr"}}
              }
            ]
          }
        },
        "EFSFileSystem": {
          "Type": "AWS::EFS::FileSystem",
          "Properties": {
            "PerformanceMode": "generalPurpose",
            "FileSystemTags": [
              {
                "Key": "Name",
                "Value": "EFSFileSystem"
              }
            ]
          }
        },
        "MountTarget1": {
          "Type": "AWS::EFS::MountTarget",
          "Properties": {
            "FileSystemId": { "Ref": "EFSFileSystem" },
            "SubnetId": {"Fn::ImportValue" : {"Fn::Sub" : "baseNetwork-publicSubnet1"}},
            "SecurityGroups": [ { "Ref": "MountTargetSecurityGroup" } ]
          }
        }
    }
}